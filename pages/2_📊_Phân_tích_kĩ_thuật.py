import streamlit as st
import pandas as pd
import numpy as np
import plotly.graph_objects as go
from utils.data_loader import load_stock_data

# ======= 1. Thi·∫øt l·∫≠p trang =======
st.set_page_config(layout="wide")
st.title("üìä Ph√¢n t√≠ch Bi·∫øn ƒë·ªông Gi√° c·ªï phi·∫øu")

# ======= 2. T·∫£i d·ªØ li·ªáu =======
@st.cache_data
def load_data():
    df_fpt = load_stock_data("4.2.3 (TARGET) (live & his) FPT_detail_transactions_processed.csv")
    df_cmg = load_stock_data("4.2.3 (TARGET) (live & his) CMG_detail_transactions_processed.csv")
    return df_fpt, df_cmg

df_fpt, df_cmg = load_data()

# ======= 3. Ch·ªçn c·ªï phi·∫øu v√† kho·∫£ng th·ªùi gian =======
col1, col2 = st.columns(2)
with col1:
    selected_stock = st.selectbox(
        "Ch·ªçn c·ªï phi·∫øu",
        ["FPT", "CMG"],
        index=0
    )
    
with col2:
    days_to_show = st.slider(
        "S·ªë ng√†y hi·ªÉn th·ªã",
        min_value=30,
        max_value=365,
        value=90,
        step=30
    )

df = df_fpt if selected_stock == "FPT" else df_cmg
df = df.tail(days_to_show).copy()

# ======= 4. T√≠nh to√°n ch·ªâ s·ªë bi·∫øn ƒë·ªông =======
def calculate_price_changes(df):
    # T√≠nh bi·∫øn ƒë·ªông gi√° t·ª´ng ng√†y
    df['Daily_Change'] = df['Price Change']
    df['Daily_Change_Pct'] = df['Price Change %']
    
    # T√≠nh t·ªïng t√≠ch l≈©y
    df['Cumulative_Change'] = df['Daily_Change'].cumsum()
    df['Cumulative_Change_Pct'] = (1 + df['Daily_Change_Pct']/100).cumprod() - 1
    
    return df

df = calculate_price_changes(df)

# ======= 5. V·∫Ω bi·ªÉu ƒë·ªì th√°c n∆∞·ªõc =======
st.subheader(f"Bi·∫øn ƒë·ªông gi√° {selected_stock} ({days_to_show} ng√†y g·∫ßn nh·∫•t)")

# T·∫°o bi·ªÉu ƒë·ªì th√°c n∆∞·ªõc cho bi·∫øn ƒë·ªông gi√°
fig_waterfall = go.Figure(go.Waterfall(
    name="Bi·∫øn ƒë·ªông gi√°",
    x=df['Date'],
    y=df['Daily_Change'],
    textposition="outside",
    text=df['Daily_Change'].round(2),
    connector={"line":{"color":"rgb(63, 63, 63)"}},
))

fig_waterfall.update_layout(
    title=f"Bi·∫øn ƒë·ªông gi√° h√†ng ng√†y - {selected_stock}",
    xaxis_title="Ng√†y",
    yaxis_title="Thay ƒë·ªïi gi√°",
    showlegend=True,
    height=600
)

# Th√™m ƒë∆∞·ªùng t·ªïng t√≠ch l≈©y
fig_waterfall.add_trace(go.Scatter(
    x=df['Date'],
    y=df['Cumulative_Change'],
    name="T·ªïng t√≠ch l≈©y",
    line=dict(color='red', width=2),
    mode='lines+markers'
))

st.plotly_chart(fig_waterfall, use_container_width=True)

# ======= 6. Th√¥ng tin b·ªï sung =======
col1, col2 = st.columns(2)

with col1:
    st.metric(
        label="Gi√° ƒë√≥ng c·ª≠a hi·ªán t·∫°i",
        value=f"{df['Closing Price'].iloc[-1]:,.2f}",
        delta=f"{df['Daily_Change'].iloc[-1]:,.2f} ({df['Daily_Change_Pct'].iloc[-1]:.2f}%)"
    )

with col2:
    st.metric(
        label="T·ªïng bi·∫øn ƒë·ªông",
        value=f"{df['Cumulative_Change'].iloc[-1]:,.2f}",
        delta=f"{df['Cumulative_Change_Pct'].iloc[-1]*100:.2f}%"
    )

# ======= 7. B·∫£ng d·ªØ li·ªáu chi ti·∫øt =======
with st.expander("üìä Xem d·ªØ li·ªáu chi ti·∫øt"):
    st.dataframe(
        df[['Date', 'Closing Price', 'Daily_Change', 'Daily_Change_Pct', 'Cumulative_Change', 'Cumulative_Change_Pct']]
        .style.format({
            'Closing Price': '{:,.2f}',
            'Daily_Change': '{:,.2f}',
            'Daily_Change_Pct': '{:.2f}%',
            'Cumulative_Change': '{:,.2f}',
            'Cumulative_Change_Pct': '{:.2f}%'
        })
        .background_gradient(subset=['Daily_Change', 'Daily_Change_Pct'], cmap='RdYlGn'),
        use_container_width=True,
        height=400
    )